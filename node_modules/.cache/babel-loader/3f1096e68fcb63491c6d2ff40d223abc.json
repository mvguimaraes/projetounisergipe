{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/ufs/src/modules/enquente/components/TimerModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, Icon } from 'semantic-ui-react';\nimport Countdown from './Countdown';\n\nclass ModalExampleSize extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.show = size => () => this.setState({\n      size,\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const {\n      open,\n      size\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      color: \"red\",\n      style: {\n        marginTop: 80,\n        marginLeft: 50\n      },\n      animated: \"vertical\",\n      onClick: this.show('large'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Ver tempo restante da vota\\xE7\\xE3o\"), React.createElement(Button.Content, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      style: {\n        marginTop: 200,\n        marginLeft: 380,\n        height: 250,\n        width: 600\n      },\n      size: size,\n      open: open,\n      onClose: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"TEMPO RESTANTE\"), React.createElement(Modal.Content, {\n      style: {\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Countdown, {\n      timeTillDate: \"12 31 2020, 6:00 am\",\n      timeFormat: \"MM DD YYYY, h:mm a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ModalExampleSize;","map":{"version":3,"sources":["/opt/lampp/htdocs/ufs/src/modules/enquente/components/TimerModal.js"],"names":["React","Component","Button","Modal","Icon","Countdown","ModalExampleSize","state","open","show","size","setState","close","render","marginTop","marginLeft","height","width","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,mBAApC;AAGA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCM,KADuC,GAC/B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD+B;;AAAA,SAGvCC,IAHuC,GAG/BC,IAAD,IAAU,MAAM,KAAKC,QAAL,CAAc;AAAED,MAAAA,IAAF;AAAQF,MAAAA,IAAI,EAAE;AAAd,KAAd,CAHgB;;AAAA,SAIvCI,KAJuC,GAI/B,MAAM,KAAKD,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAd,CAJyB;AAAA;;AAMvCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiB,KAAKH,KAA5B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,KAAK,EAAE;AAAEO,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAApC;AAAsE,MAAA,QAAQ,EAAC,UAA/E;AAA0F,MAAA,OAAO,EAAE,KAAKN,IAAL,CAAU,OAAV,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADA,EAEM,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFN,CAFF,EAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE,GAAb;AAAkBC,QAAAA,UAAU,EAAE,GAA9B;AAAmCC,QAAAA,MAAM,EAAE,GAA3C;AAAgDC,QAAAA,KAAK,EAAE;AAAvD,OAAd;AAA0E,MAAA,IAAI,EAAEP,IAAhF;AAAsF,MAAA,IAAI,EAAEF,IAA5F;AAAkG,MAAA,OAAO,EAAE,KAAKI,KAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAE;AAACM,QAAAA,SAAS,EAAC;AAAX,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,OAAP;AAAe,MAAA,KAAK,EAAE;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAC,qBAAxB;AAA8C,MAAA,UAAU,EAAC,oBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFF,CAVF,CADF;AAoBD;;AA7BsC;;AAgCzC,eAAeV,gBAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\n\nimport Countdown from './Countdown'\n\n\nclass ModalExampleSize extends Component {\n  state = { open: false }\n\n  show = (size) => () => this.setState({ size, open: true })\n  close = () => this.setState({ open: false })\n\n  render() {\n    const { open, size } = this.state\n\n    return (\n      <div>\n        \n        <Button circular color='red' style={{ marginTop: 80, marginLeft: 50}} animated='vertical' onClick={this.show('large')}>\n        <Button.Content visible>Ver tempo restante da votação</Button.Content>\n              <Button.Content hidden>\n                <Icon name='time' />\n              </Button.Content>\n        </Button>\n        \n\n        <Modal style={{ marginTop: 200, marginLeft: 380, height: 250, width: 600}}size={size} open={open} onClose={this.close}>\n          <Modal.Header style={{textAlign:\"center\"}} >TEMPO RESTANTE</Modal.Header>\n          <Modal.Content style={{ height: 200}}>\n          <Countdown timeTillDate=\"12 31 2020, 6:00 am\" timeFormat=\"MM DD YYYY, h:mm a\" />\n          </Modal.Content>\n          \n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ModalExampleSize"]},"metadata":{},"sourceType":"module"}
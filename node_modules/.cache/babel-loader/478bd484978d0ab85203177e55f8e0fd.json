{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/ufs/src/modules/enquente/components/Countdown.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nclass Countdown extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const {\n        timeTillDate,\n        timeFormat\n      } = this.props;\n      const then = moment(timeTillDate, timeFormat);\n      const now = moment();\n      const countdown = moment(then - now);\n      const days = countdown.format('D');\n      const hours = countdown.format('HH');\n      const minutes = countdown.format('mm');\n      const seconds = countdown.format('ss');\n      this.setState({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state; // Mapping the date values to radius values\n\n    const daysRadius = mapNumber(days, 30, 0, 0, 360);\n    const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n    const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n    const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n    if (!seconds) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"A VOTA\\xC7\\xC3O TERMINA EM:\"), React.createElement(\"div\", {\n      className: \"countdown-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, days && React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(SVGCircle, {\n      radius: daysRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), days, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"dias\")), hours && React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(SVGCircle, {\n      radius: hoursRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), hours, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"horas\")), minutes && React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(SVGCircle, {\n      radius: minutesRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), minutes, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"minutos\")), seconds && React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(SVGCircle, {\n      radius: secondsRadius,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), seconds, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"segundos\"))));\n  }\n\n}\n\nexport default Countdown;\n\nconst SVGCircle = ({\n  radius\n}) => React.createElement(\"svg\", {\n  className: \"countdown-svg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, React.createElement(\"path\", {\n  fill: \"none\",\n  stroke: \"#333\",\n  \"stroke-width\": \"4\",\n  d: describeArc(50, 50, 48, 0, radius),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n})); // From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(' ');\n  return d;\n} // From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\n\n\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/ufs/src/modules/enquente/components/Countdown.js"],"names":["React","moment","Countdown","Component","state","days","undefined","hours","minutes","seconds","componentDidMount","interval","setInterval","timeTillDate","timeFormat","props","then","now","countdown","format","setState","componentWillUnmount","clearInterval","render","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","SVGCircle","radius","describeArc","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join","number","in_min","in_max","out_min","out_max"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport moment from 'moment';\n\n\nclass Countdown extends React.Component {\n    state = {\n        days: undefined,\n        hours: undefined,\n        minutes: undefined,\n        seconds: undefined\n    };\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            const { timeTillDate, timeFormat } = this.props;\n            const then = moment(timeTillDate, timeFormat);\n            const now = moment();\n            const countdown = moment(then - now);\n            const days = countdown.format('D');\n            const hours = countdown.format('HH');\n            const minutes = countdown.format('mm');\n            const seconds = countdown.format('ss');\n\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    render() {\n        const { days, hours, minutes, seconds } = this.state;\n\n        // Mapping the date values to radius values\n        const daysRadius = mapNumber(days, 30, 0, 0, 360);\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n        if (!seconds) {\n            return null;\n        }\n\n        return (\n            <div>\n                <h5>A VOTAÇÃO TERMINA EM:</h5>\n                <div className=\"countdown-wrapper\">\n                    {days && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={daysRadius} />\n                            {days}\n                            <span>dias</span>\n                        </div>\n                    )}\n                    {hours && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={hoursRadius} />\n                            {hours}\n                            <span>horas</span>\n                        </div>\n                    )}\n                    {minutes && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={minutesRadius} />\n                            {minutes}\n                            <span>minutos</span>\n                        </div>\n                    )}\n                    {seconds && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={secondsRadius} />\n                            {seconds}\n                            <span>segundos</span>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Countdown\n\nconst SVGCircle = ({ radius }) => (\n    <svg className=\"countdown-svg\">\n        <path\n            fill=\"none\"\n            stroke=\"#333\"\n            stroke-width=\"4\"\n            d={describeArc(50, 50, 48, 0, radius)}\n        />\n    </svg>\n);\n\n// From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians)\n    };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n    var d = [\n        'M',\n        start.x,\n        start.y,\n        'A',\n        radius,\n        radius,\n        0,\n        largeArcFlag,\n        0,\n        end.x,\n        end.y\n    ].join(' ');\n\n    return d;\n}\n\n// From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n    return (\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n    );\n}"]},"metadata":{},"sourceType":"module"}